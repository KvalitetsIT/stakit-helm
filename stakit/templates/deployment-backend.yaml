apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stakit.fullname" . }}-backend
  namespace: {{ .Values.namespace | default "default" }}  
  labels:
    {{- include "stakit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "stakit.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stakit.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "stakit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: JDBC_URL
              value: "{{ .Values.configuration.jdbcUrl }}"
            - name: JDBC_USER
              value: "{{ .Values.configuration.jdbcUser }}"
            - name: JDBC_PASS
              value: "{{ .Values.configuration.jdbcPassword }}"
            - name: MAIL_HOST
              value: "{{ .Values.configuration.mailHost }}"
            - name: MAIL_PORT
              value: "{{ .Values.configuration.mailPort }}"
            - name: MAIL_USER
              value: "{{ .Values.configuration.mailUser }}"
            - name: MAIL_PASSWORD
              value: "{{ .Values.configuration.mailPassword }}"
            - name: MAIL_FROM
              value: "{{ .Values.configuration.mailFrom }}"
            - name: STATUS_UPDATE_BODY_TEMPLATE
              value: "{{ .Values.configuration.statusUpdateBodyTemplate }}"
            - name: STATUS_UPDATE_SUBJECT_TEMPLATE
              value: "{{ .Values.configuration.statusUpdateSubjectTemplate }}"
            - name: ADAPTER_API_KEY
              value: "{{ .Values.configuration.adapterApiKey }}"
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
            - name: actuator
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}        
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
