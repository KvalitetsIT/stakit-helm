apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stakit.fullname" . }}-backend
  namespace: {{ .Values.namespace | default "default" }}  
  labels:
    {{- include "stakit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "stakit.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stakit.backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.frontend.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env: {{ if (not .Values.backend.deployment.env) }}[]{{ end }}
            {{- range $key, $value := .Values.backend.deployment.env }}
            - name: {{ $key }}
            {{- if (not $value.type) }}
              value: {{ $value.value | quote }}
            {{- else if eq $value.type "fieldPath" }}
              valueFrom:
                fieldRef:
                  fieldPath: {{ $value.value }}
            {{- else if eq $value.type "secretKeyRef" }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value.key }}
                  name: {{ $value.name }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
            - name: actuator
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: actuator
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - emptyDir: {}
          name: tmp
